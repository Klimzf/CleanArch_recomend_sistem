// <auto-generated />
using System;
using CleanArch_recomend_sistem.Infrastructure.Db;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CleanArch_recomend_sistem_infrastructure.Migrations
{
    [DbContext(typeof(ProjectContext))]
    [Migration("20241015183941_SecondData")]
    partial class SecondData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CleanArch_recomend_sistem.Core.Entities.Movie", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWSEQUENTIALID()");

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Rating")
                        .HasColumnType("float");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Movie");

                    b.HasData(
                        new
                        {
                            Id = new Guid("81af2713-99e0-4fae-9753-6a21a1551f4c"),
                            Genre = "Sci-Fi",
                            Rating = 8.6999999999999993,
                            Title = "The Matrix"
                        },
                        new
                        {
                            Id = new Guid("f316589f-bc7f-4679-ba53-3d36e3fa6284"),
                            Genre = "Sci-Fi",
                            Rating = 8.8000000000000007,
                            Title = "Inception"
                        },
                        new
                        {
                            Id = new Guid("b38a977d-34d3-476e-b536-3ad54930d0f4"),
                            Genre = "Sci-Fi",
                            Rating = 8.5999999999999996,
                            Title = "Interstellar"
                        },
                        new
                        {
                            Id = new Guid("e44a59cc-66da-4db8-a091-13f78097e770"),
                            Genre = "Action",
                            Rating = 9.0,
                            Title = "The Dark Knight"
                        },
                        new
                        {
                            Id = new Guid("8c74be2e-53dd-4b04-8382-d668c5ea2d82"),
                            Genre = "Drama",
                            Rating = 8.8000000000000007,
                            Title = "Fight Club"
                        },
                        new
                        {
                            Id = new Guid("b973900e-dd9c-4b7d-99d3-61c5686af85e"),
                            Genre = "Crime",
                            Rating = 8.9000000000000004,
                            Title = "Pulp Fiction"
                        },
                        new
                        {
                            Id = new Guid("e2d8ffde-ede7-4573-af8f-ce7f87ee5826"),
                            Genre = "Drama",
                            Rating = 8.8000000000000007,
                            Title = "Forrest Gump"
                        },
                        new
                        {
                            Id = new Guid("df7033da-e358-4cf1-9c0f-754c6dab99f0"),
                            Genre = "Drama",
                            Rating = 9.3000000000000007,
                            Title = "The Shawshank Redemption"
                        },
                        new
                        {
                            Id = new Guid("9dca1c0f-4057-4fdf-8dcf-5beecb8f8818"),
                            Genre = "Crime",
                            Rating = 9.1999999999999993,
                            Title = "The Godfather"
                        },
                        new
                        {
                            Id = new Guid("096b52e8-40a3-4db1-aceb-c5a9a47372fc"),
                            Genre = "Crime",
                            Rating = 9.0,
                            Title = "The Godfather: Part II"
                        },
                        new
                        {
                            Id = new Guid("4f61dabf-c48f-42b0-87c2-c7e156da99dd"),
                            Genre = "Fantasy",
                            Rating = 8.8000000000000007,
                            Title = "The Lord of the Rings: The Fellowship of the Ring"
                        },
                        new
                        {
                            Id = new Guid("88e36e5a-5a07-4f19-9965-d257f21281db"),
                            Genre = "Fantasy",
                            Rating = 8.6999999999999993,
                            Title = "The Lord of the Rings: The Two Towers"
                        },
                        new
                        {
                            Id = new Guid("84d17129-2a9c-418d-86ea-50c5c48bdd27"),
                            Genre = "Fantasy",
                            Rating = 9.0,
                            Title = "The Lord of the Rings: The Return of the King"
                        },
                        new
                        {
                            Id = new Guid("29348f3c-b07a-42e3-a759-dc90c89b951e"),
                            Genre = "Sci-Fi",
                            Rating = 8.5999999999999996,
                            Title = "Star Wars: A New Hope"
                        },
                        new
                        {
                            Id = new Guid("ed54fc43-61de-448f-bc08-74d0bc7a7beb"),
                            Genre = "Sci-Fi",
                            Rating = 8.6999999999999993,
                            Title = "Star Wars: The Empire Strikes Back"
                        },
                        new
                        {
                            Id = new Guid("2f2b8b08-3d27-4758-a150-dd2149d001f2"),
                            Genre = "Sci-Fi",
                            Rating = 8.3000000000000007,
                            Title = "Star Wars: Return of the Jedi"
                        },
                        new
                        {
                            Id = new Guid("b1802739-6e31-40f0-a288-ee9c629eed47"),
                            Genre = "Thriller",
                            Rating = 8.5999999999999996,
                            Title = "The Silence of the Lambs"
                        },
                        new
                        {
                            Id = new Guid("295aecfc-3586-4646-af32-5f1985f26479"),
                            Genre = "History",
                            Rating = 9.0,
                            Title = "Schindler's List"
                        },
                        new
                        {
                            Id = new Guid("01a1a232-4928-40b7-9372-6f6d14a5976c"),
                            Genre = "Action",
                            Rating = 8.5,
                            Title = "Gladiator"
                        },
                        new
                        {
                            Id = new Guid("3babea32-807d-41ef-afe7-c5a118921c1e"),
                            Genre = "Action",
                            Rating = 8.3000000000000007,
                            Title = "Braveheart"
                        },
                        new
                        {
                            Id = new Guid("9470cb5d-f7e5-4463-8909-7904479e06cc"),
                            Genre = "Romance",
                            Rating = 7.9000000000000004,
                            Title = "Titanic"
                        },
                        new
                        {
                            Id = new Guid("6f2caf58-e68e-43f8-92bb-36e97193ea96"),
                            Genre = "Sci-Fi",
                            Rating = 7.7999999999999998,
                            Title = "Avatar"
                        },
                        new
                        {
                            Id = new Guid("1cdd04d6-7aee-4a61-8844-64c515247291"),
                            Genre = "Action",
                            Rating = 8.0,
                            Title = "The Avengers"
                        },
                        new
                        {
                            Id = new Guid("ac11842e-0da8-4062-a160-53f360ff165c"),
                            Genre = "Action",
                            Rating = 8.4000000000000004,
                            Title = "Avengers: Endgame"
                        },
                        new
                        {
                            Id = new Guid("44e946f4-71c8-486f-a6ba-c262152c704b"),
                            Genre = "Action",
                            Rating = 8.0999999999999996,
                            Title = "Guardians of the Galaxy"
                        },
                        new
                        {
                            Id = new Guid("f5b3bac2-8043-47a9-8088-8f59870da2dd"),
                            Genre = "Animation",
                            Rating = 8.4000000000000004,
                            Title = "Spider-Man: Into the Spider-Verse"
                        },
                        new
                        {
                            Id = new Guid("cfcdd117-e862-4a02-a234-bf10fa088a2c"),
                            Genre = "Animation",
                            Rating = 8.5,
                            Title = "The Lion King"
                        },
                        new
                        {
                            Id = new Guid("ac920fde-1611-4877-aba9-852154c5645c"),
                            Genre = "Animation",
                            Rating = 7.4000000000000004,
                            Title = "Frozen"
                        },
                        new
                        {
                            Id = new Guid("91b25944-3002-4481-8b8f-bbeb02a99953"),
                            Genre = "Animation",
                            Rating = 8.3000000000000007,
                            Title = "Toy Story"
                        },
                        new
                        {
                            Id = new Guid("43a9f7b5-5ec4-4def-aac6-1e8ce2ddab2e"),
                            Genre = "Animation",
                            Rating = 8.3000000000000007,
                            Title = "Toy Story 3"
                        },
                        new
                        {
                            Id = new Guid("6c23bc92-8b90-4f64-867a-b671048375d8"),
                            Genre = "Animation",
                            Rating = 8.0999999999999996,
                            Title = "Finding Nemo"
                        });
                });

            modelBuilder.Entity("CleanArch_recomend_sistem.Core.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWSEQUENTIALID()");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = new Guid("be411900-f838-4bf8-afa1-cae366a9e951"),
                            Email = "johndoe@example.com",
                            Name = "John Doe",
                            Number = "123456789"
                        },
                        new
                        {
                            Id = new Guid("015e72fc-e904-4557-9bb9-6360bdce5acd"),
                            Email = "janesmith@example.com",
                            Name = "Jane Smith",
                            Number = "987654321"
                        },
                        new
                        {
                            Id = new Guid("759e4dc3-f08a-404a-a14d-c1bee33b0e7d"),
                            Email = "robertbrown@example.com",
                            Name = "Robert Brown",
                            Number = "456789123"
                        },
                        new
                        {
                            Id = new Guid("66d3e8b5-fe70-45e2-bed9-464921dbccf9"),
                            Email = "alicejohnson@example.com",
                            Name = "Alice Johnson",
                            Number = "789123456"
                        },
                        new
                        {
                            Id = new Guid("5d698d95-c47b-4cd0-99ee-0f652ae9b829"),
                            Email = "davidclark@example.com",
                            Name = "David Clark",
                            Number = "321654987"
                        },
                        new
                        {
                            Id = new Guid("8b27c92a-67b5-45ec-ae1c-fa8e6b680688"),
                            Email = "emma@example.com",
                            Name = "Emma Harris",
                            Number = "654987321"
                        },
                        new
                        {
                            Id = new Guid("b099e4a4-665b-496c-b473-cbda2b92eeb9"),
                            Email = "michael@example.com",
                            Name = "Michael Adams",
                            Number = "135792468"
                        },
                        new
                        {
                            Id = new Guid("ef04f83f-a198-4bda-a50e-60200a2099b2"),
                            Email = "sophia@example.com",
                            Name = "Sophia Baker",
                            Number = "246813579"
                        },
                        new
                        {
                            Id = new Guid("4fd07cb4-df47-4e5a-9da0-5996dad407c7"),
                            Email = "william@example.com",
                            Name = "William Scott",
                            Number = "159753486"
                        },
                        new
                        {
                            Id = new Guid("117e8b47-b4fd-487a-bb5e-c221be4eecd6"),
                            Email = "olivia@example.com",
                            Name = "Olivia Wilson",
                            Number = "357951486"
                        });
                });

            modelBuilder.Entity("CleanArch_recomend_sistem.Core.Entities.UserMovieRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWSEQUENTIALID()");

                    b.Property<Guid>("MovieId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("MovieId");

                    b.HasIndex("UserId");

                    b.ToTable("UserMovieRating");
                });

            modelBuilder.Entity("CleanArch_recomend_sistem.Core.Entities.UserMovieRating", b =>
                {
                    b.HasOne("CleanArch_recomend_sistem.Core.Entities.Movie", "Movie")
                        .WithMany("MovieRatings")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CleanArch_recomend_sistem.Core.Entities.User", "User")
                        .WithMany("MovieRatings")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Movie");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CleanArch_recomend_sistem.Core.Entities.Movie", b =>
                {
                    b.Navigation("MovieRatings");
                });

            modelBuilder.Entity("CleanArch_recomend_sistem.Core.Entities.User", b =>
                {
                    b.Navigation("MovieRatings");
                });
#pragma warning restore 612, 618
        }
    }
}
